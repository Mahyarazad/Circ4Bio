@page "{id}"
@using _0_Framework.Application
@using Microsoft.Extensions.Configuration
@using Newtonsoft.Json
@inject IConfiguration _Configuration;
@model ServiceHost.Areas.Dashboard.Pages.Deals.ConfirmQuotationModel;
@inject IAuthenticateHelper AuthenticateHelper;
@{ ViewData["Title"] = $"Dashboard | Deals | {@Model.Command.ItemName} Quotation";}


<form class="divide-y divide-gray-200 lg:col-span-9" id="form"
      method="post"
      data-callback="" data-ajax="true" data-action="Refresh"
      enctype="multipart/form-data">
        <partial name="_OperationResult" />
        <div class="flex">
            <div class="flex-shrink-0">
                <!-- Heroicon name: solid/check-circle -->
                <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
                </svg>
            </div>
            <div class="ml-3">
                <p class="text-sm font-medium text-red-800" id="operation-result-failed-message">

                </p>
            </div>
        </div>
    </div>
    <!-- end -->
    <!-- Profile section -->
    <div class="mt-6 flex flex-col lg:flex-row">
        <div class="flex-grow space-y-6 mx-4">
            <div id="finished-Quotation" class="mt-2 flex-col lg:flex-row justify-between
                 flex @(Model.Command.IsFinished ? "bg-teal-400" : Model.Command.IsActive ?"bg-sky-800" : "bg-gray-700") rounded-md text-xl lg:text-2xl px-2 lg:px-10 text-white">
                <p class="py-1 lg:place-self-center">
                    @(Model.Command.IsFinished ? "Finished" : Model.Command.IsActive ? "Quotation Confirmed" : "Draft Quotation")
                </p>
                @if (Model.Command.IsFinished || Model.Command.IsActive)
                {
                    <p class="py-1 lg:place-self-center"> Tracking Code: @Model.Command.TrackingCode</p>
                }

            </div>
            <div class="mt-6 grid grid-cols-2 gap-2">
                <div class="col-span-2 sm:col-span-1 space-y-1">
                    <div class="grid grid-cols-4 gap-1">
                        <div class="flex flex-col col-span-3">
                            <label class="block text-sm font-medium text-gray-700"> Seller Info: </label>
                            <p class="mt-5 w-full py-1 px-3 sm:text-sm">@Model.Command.Seller.Email</p>
                            <p class="mt-1 w-full py-1 px-3 sm:text-sm">@Model.Command.Seller.FullName</p>

                        </div>
                        <img class="col-span-1 py-3"
                             src="~/Site Files/Profile_Images/@(Model.Command.Seller.Avatar == "default-avatar.png" ? "default-avatar.png" : $"{Model.Command.Seller.Avatar}")"
                             alt=""/>

                    </div>


                    <label class="block text-sm font-medium text-gray-700"> Delivery Charges </label>
                    <div class="mt-1 block w-full bg-gray-100 pl-3 pr-10 py-2 text-base border-gray-100  sm:text-sm rounded-md">
                        <p>by @Model.Command.DeliveryMethod</p>
                    </div>


                    <label class="block text-sm font-medium text-gray-700 mt-3">Delivery Cost</label>
                    <div class="mt-1 block w-full bg-gray-100 border border-gray-100 rounded-md shadow-sm py-2 px-3 sm:text-sm flex justify-between">
                        <p>@Model.Command.DeliveryCost</p>
                        <span>@Model.Command.Currency</span>
                    </div>


                    <label asp-for="@Model.Command.Amount" class="block text-sm font-medium text-gray-700"></label>
                    <div class="mt-1 block w-full bg-gray-100 rounded-md shadow-sm py-2 px-3  sm:text-sm flex justify-between">
                        <p>@Model.Command.Amount</p>
                        <span>@Model.Command.Unit</span>
                    </div>


                    <label class="block text-sm font-medium text-gray-700"> Unit Price </label>
                    <div class="mt-1 block w-full bg-gray-100 rounded-md shadow-sm py-2 px-3 sm:text-sm flex justify-between">
                        <p>@Model.Command.Listing.UnitPrice</p>
                        <span>@Model.Command.Currency</span>
                    </div>

                    <span id="show-currency" class="absolute ml-72 sm:ml-56 mt-8 md:ml-72"></span>
                    <label class="block text-sm font-medium text-gray-700">Total Cost</label>
                    <div class="mt-1 block w-full bg-gray-100 rounded-md shadow-sm py-2 px-3 sm:text-sm flex justify-between">
                        <p>@Model.Command.TotalCost</p>
                        <span>@Model.Command.Currency</span>
                    </div>
                </div>

                <div class="col-span-2 sm:col-span-1 space-y-1">

                    <label asp-for="@Model.Command.Listing.Name" class="block text-sm font-medium text-gray-700"></label>
                    <p class="mt-1 block w-full border bg-gray-100 border-gray-100 rounded-md shadow-sm py-2 px-3 sm:text-sm">
                        @Model.Command.Listing.Name
                    </p>

                    <label asp-for="@Model.Command.Listing.Description" class="block text-sm font-medium text-gray-700"></label>
                    <p class="mt-1 block w-full border bg-gray-100 border-gray-100 rounded-md shadow-sm py-2 px-3 sm:text-sm">
                        @Model.Command.Listing.Description
                    </p>


                    <label class="block text-sm font-medium text-gray-700 mt-3">Delivery Location</label>
                    <div class="mt-1 block bg-gray-100 border-gray-100 w-full px-2 py-2 text-base border-gray-300 sm:text-sm rounded-md">
                        <div class="flex justify-between flex-col">
                            <div class="text-sm text-gray-800">
                                <span class="text-sm text-gray-900 font-medium">Address Title:</span>
                                @Model.Command.DeliveryLocation.Name
                                <div class="flex flex-col">
                                    <p class="text-sm text-gray-800">
                                        <span class="text-sm text-gray-900 font-medium">Country:</span>
                                        @Model.Command.DeliveryLocation.Country
                                    </p>
                                    <p class="text-sm text-gray-800">
                                        <span class="text-sm text-gray-900 font-medium">City:</span>
                                        @Model.Command.DeliveryLocation.City
                                    </p>
                                    <p class="text-sm text-gray-800">
                                        <span class="text-sm text-gray-900 font-medium">Address Line 1:</span>
                                        @Model.Command.DeliveryLocation.AddressLineOne
                                    </p>
                                    <p class="text-sm text-gray-800">
                                        <span class="text-sm text-gray-900 font-medium">Address Line 2:</span>
                                        @Model.Command.DeliveryLocation.AddressLineTwo
                                    </p>
                                    <p class="text-sm text-gray-800">
                                        <span class="text-sm text-gray-900 font-medium">Postal Code:</span>
                                        @Model.Command.DeliveryLocation.PostalCode
                                    </p>

                                </div>
                                <div class="space-y-32 rounded-l-md w-full" id="@Model.Command.DeliveryLocation.LocationId"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-span-2 sm:col-span-1 space-y-1">
                    <label class="block text-sm font-medium text-gray-700 my-2">Contract</label>
                    @if (Model.Command.ContractFileString != null)
                    {
                        <div class="my-2">
                            <a href="~/Site Files/Deal Documents/@Model.Command.NegotiateId/@Model.Command.ContractFileString"
                               class="mt-1 w-full border border-gray-100 rounded-md shadow-sm py-2 px-3 sm:text-sm">
                                @(Model.Command.ContractFileString != null ? "Open Contract File" : "No Contract File")
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="my-2">
                            <p class="w-full border bg-gray-100 border-gray-100 rounded-md shadow-sm py-2 px-2 sm:text-sm">
                                No Contract File
                            </p>
                        </div>}

                </div>
                <input type="hidden" asp-for="@Model.Command.NegotiateId">
                <input type="hidden" asp-for="@Model.Command.ListingId">
                <input type="hidden" asp-for="@Model.Command.DealId">
            </div>
        </div>
    </div>
    <div class="mt-4 py-4 px-4 flex justify-end sm:px-6">
        <a asp-page="/Deals/Index" asp-route-id="@Model.LoggedUser.Id"
           asp-area="Dashboard"
           class="bg-white border border-gray-100 rounded-md shadow-sm py-2 px-4 h-9 place-self-center
           justify-center text-sm font-medium text-gray-700 hover:bg-gray-100 focus:outline-none
           focus:ring-2
           focus:ring-offset-2 focus:ring-gray-500">
            Back

        </a>
        @if(!Model.Command.IsFinished) {
            @if (Model.Command.IsActive && Model.Command.Seller.Id != Model.LoggedUser.Id)
            {
                <a asp-page="ConfirmQuotation" asp-route-id="@Model.Command.NegotiateId" asp-page-handler="CheckOut"
                   onclick="loading()"
                   class="">
                    <img class="h-8 my-2 px-1"
                         src="~/Site Files/checkout-logo-large.png" alt="Check out with PayPal"/>
                </a>
            }

            @if (!Model.Command.IsActive & !Model.Command.IsCanceled)
            {
                <button id="save" type="submit"
                        class="ml-2 bg-sky-700 border border-transparent rounded-md shadow-sm py-2
                        px-4 h-9 place-self-center
                    justify-center text-sm font-medium text-white hover:bg-sky-800
                        focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-700">
                    Confirm Quotation
                </button>
            }
        }

    </div>
</form>

@section CSS
{
    <link rel="stylesheet" href="~/css/mapbox-gl.css"/>
    <link rel="stylesheet" href="~/css/Loader.css"/>
}

@section Scripts
{
    <script src="~/js/mapbox-gl.js"></script>
    <script>
        mapboxgl.accessToken = @Html.Raw(Json.Serialize(_Configuration.GetSection("MapBox")["SecretKey"]));
        var deliveryAddress = @Html.Raw(JsonConvert.SerializeObject(Model.Command.DeliveryLocation));
        var map = new mapboxgl.Map({
            container: deliveryAddress.LocationId.toString(), // container ID
            style: 'mapbox://styles/mapbox/streets-v11', // style URL
            center: [deliveryAddress.Longitude, deliveryAddress.Latitude], // starting position [lng, lat]
            zoom: 12 // starting zoom
        });
        // Create a default Marker and add it to the map.
        var marker = new mapboxgl.Marker({ color: 'red', rotation: 0 })
            .setLngLat([deliveryAddress.Longitude, deliveryAddress.Latitude])
            .addTo(map);

    </script>
}