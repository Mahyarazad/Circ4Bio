@page "{id}"
@using _0_Framework
@using _0_Framework.Application
@using AM.Infrastructure.Core
@using Microsoft.Extensions.Configuration
@using Newtonsoft.Json
@inject IConfiguration _Configuration;
@inject IAuthenticateHelper AuthenticateHelper;
@model ServiceHost.Areas.Dashboard.Pages.AvailableListing.Detail
@{ ViewData["Title"] = $"Dashboard | Available Listing | {Model.Listing.Name}";}

<div class="divide-y divide-gray-200 lg:col-span-9">
@if (Model.Listing.IsDeleted)
{
    <div class="flex justify-center my-32 flex-row">
        <p class="font-bold tracking-tight text-2xl text-red-600">This Item has been deleted</p>

    </div>
    <a asp-page="/AvailableListing/Index" asp-area="Dashboard"
       class="flex items-center bg-white border border-gray-300 rounded-md
                            mr-3 mb-2 float-right shadow-sm py-2 px-4 inline-flex justify-center
                                           text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2
                                           focus:ring-offset-2 focus:ring-gray-500">
        Back
    </a>
}
else
{
<div class="flex flex-col">

    <div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8 place-self-center">
        <div class="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">

            <div class="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
                <!-- operation-result -->
                <div class="rounded-md bg-green-50 p-4 transition ease-in-out duration-75" id="operation-result" style="display: none">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <!-- Heroicon name: solid/check-circle -->
                            <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm font-medium text-green-800" id="operation-result-message">

                            </p>
                        </div>
                    </div>
                </div>
                <div class="rounded-md bg-red-50 p-4 transition ease-in-out duration-75" id="operation-result-failed" style="display: none">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <!-- Heroicon name: solid/check-circle -->
                            <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm font-medium text-red-800" id="operation-result-failed-message">

                            </p>
                        </div>
                    </div>
                </div>
                <!-- end -->
                <div class="flex justify-start">


                    @if (!Model.user.Status)
                    {
                        <span class="text-red-500 pb-3 mx-5 mt-4"> @ApplicationMessage.SubmitRequiredInfo</span>
                    }
                </div>

                <div class="lg:m-4 m-0 w-full grid grid-cols-1 gap-y-8 gap-x-6 px-2 py-2
                     items-start sm:grid-cols-12 lg:gap-x-8">
                    <div class="sm:col-span-4 lg:col-span-5 place-self-center lg:mx-0">
                        <div class="rounded-lg bg-gray-100 overflow-hidden">
                            <img src="~/Site Files/Listing_Images/@(Model.Listing.Image == "listing-default.png" ? "listing-default.png" : $"{Model.Listing.Type}/{Model.Listing.Image}")"
                                 alt=Model.Listing.Image class="object-center object-cover">
                        </div>
                    </div>
                    <div class="sm:col-span-8 lg:col-span-7">
                        <h2 class="text-2xl font-extrabold text-gray-900 sm:pr-12">@Model.Listing.Name</h2>

                        <section aria-labelledby="information-heading" class="mt-3">

                            <p class="text-2xl text-gray-900">@Model.Listing.Currency @Model.Listing.UnitPrice</p>
                            <p class="text-xl text-gray-900">Available Amount: @Model.Listing.Amount @Model.Listing.Unit</p>
                            <p class="text-xl text-gray-900">Delivery Cost: by @Model.Listing.DeliveryMethod</p>
                            <p class="text-xl text-gray-900">Owner of this Item: @Model.Listing.Email</p>
                            <p class="text-xl text-gray-900">Supplies count: @Model.Listing.PurchaseCount</p>

                            <div class="mt-6">
                                <h4 class="">Description:</h4>
                                <p class="text-sm text-gray-700 mr-0 lg:mr-2">@Model.Listing.Description</p>
                            </div>
                        </section>
                        @if (Model.Listing.DeliveryLocation.Name != "")
                        {
                            <div title="Delivery Location" class="mt-3 pr-0 lg:pr-3">
                                <label class="block text-sm font-medium text-gray-700 mt-3">Delivery Location</label>
                                <div class="mt-1 block bg-gray-100 border-gray-100 w-full px-2 py-2 text-base border-gray-300 sm:text-sm rounded-md">
                                    <div class="flex justify-between flex-col">
                                        <div class="text-sm text-gray-800">
                                            <span class="text-sm text-gray-900 font-medium">Address Title:</span>
                                            @Model.Listing.DeliveryLocation.Name
                                            <div class="flex flex-col">
                                                <p class="text-sm text-gray-800">
                                                    <span class="text-sm text-gray-900 font-medium">Country:</span>
                                                    @Model.Listing.DeliveryLocation.Country
                                                </p>
                                                <p class="text-sm text-gray-800">
                                                    <span class="text-sm text-gray-900 font-medium">City:</span>
                                                    @Model.Listing.DeliveryLocation.City
                                                </p>
                                                <p class="text-sm text-gray-800">
                                                    <span class="text-sm text-gray-900 font-medium">Address Line 1:</span>
                                                    @Model.Listing.DeliveryLocation.AddressLineOne
                                                </p>
                                                <p class="text-sm text-gray-800">
                                                    <span class="text-sm text-gray-900 font-medium">Address Line 2:</span>
                                                    @Model.Listing.DeliveryLocation.AddressLineTwo
                                                </p>
                                                <p class="text-sm text-gray-800">
                                                    <span class="text-sm text-gray-900 font-medium">Postal Code:</span>
                                                    @Model.Listing.DeliveryLocation.PostalCode
                                                </p>

                                            </div>
                                            <div class="space-y-32 rounded-l-md w-full" id="@Model.Listing.DeliveryLocation.LocationId"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }


                        <section aria-labelledby="options-heading" class="mt-6">
                            <h3 id="options-heading" class="sr-only">Product options</h3>
                            @if (Model.NaceData.Id != 0)
                            {
                                <div class="pr-0 mr-0 sm:pr-2 sm:mr-2">
                                    <table class="min-w-full border-collapse block md:table" id="main-table">
                                        <thead class="block md:table-header-group">
                                        </thead>
                                        <tbody class="block md:table-row-group">

                                            @foreach (var item in Model.NaceViewModel.Items)
                                            {
                                                if (!item.IsDeleted)
                                                {
                                                    <tr class="bg-white border border-grey-500 md:border-none block md:table-row flex justify-between">
                                                        <td class="p-2 md:border md:border-grey-200 text-left block md:table-cell">
                                                            @*<span class="inline-block w-1/3 md:hidden font-bold">Index Title</span>*@
                                                            <div>
                                                                <div class="text-sm text-gray-800">
                                                                    @item.DetailBody
                                                                </div>

                                                            </div>
                                                        </td>
                                                        <td class="p-2 md:border md:border-grey-200 text-left block md:table-cell">
                                                            @*<span class="inline-block w-1/3 md:hidden font-bold">Value</span>*@
                                                            <div>
                                                                <div class="text-sm text-gray-800 flex-col">
                                                                    @if (item.ListItems.Count == 1)
                                                                    {
                                                                        @foreach (var detailItem in item.ListItems)
                                                                        {
                                                                            @if (!@detailItem.IsDeleted)
                                                                            {
                                                                                <div class="flex">
                                                                                    @foreach (var naceData in Model.NaceData.NaceDataDetails)
                                                                                    {
                                                                                        if (naceData.ItemdetailIndex == detailItem.ListItemDetailId)
                                                                                        {
                                                                                            <div class="self-center ml-2" id="data-@detailItem.ListItemDetailId">
                                                                                                @(naceData.ItemdetailValues)
                                                                                            </div>
                                                                                        }
                                                                                    }
                                                                                    <div class="self-center ml-2" id="@detailItem.ListItemDetailId">
                                                                                        @(detailItem.ListItemDetail)
                                                                                    </div>
                                                                                </div>}
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        foreach (var itemdetail in item.ListItems)
                                                                        {
                                                                            @foreach (var naceData in Model.NaceData.NaceDataDetails)
                                                                            {
                                                                                if (itemdetail.ListItemDetailId == naceData.ItemdetailIndex)
                                                                                {
                                                                                    <div class="self-center ml-2" id="data-@naceData.ItemdetailIndex">
                                                                                        @(naceData.ItemdetailValues)
                                                                                    </div>
                                                                                }
                                                                            }
                                                                        }
                                                                    }

                                                                </div>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }

                            <form method="post" asp-page="/AvailableListing/Index" id="form"
                                  data-callback="" data-ajax="true" data-action="Refresh">

                                <div class="mt-6 flex flex-col">
                                    <div class="self-end flex mr-0 lg:mr-6">
                                        <a asp-page="/AvailableListing/Index" asp-area="Dashboard"
                                           class="flex items-center bg-white border border-gray-300 rounded-md
                                               shadow-sm py-2 px-4 inline-flex justify-center
                                           text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2
                                           focus:ring-offset-2 focus:ring-gray-500">
                                            Back
                                        </a>
                                        <input type="hidden" value="@Model.Listing.Id" name="Id" />
                                        <div permission="@UserPermission.CreateNegotiation">
                                            <button type="submit" onclick="gototop()"
                                                    @(Model.Listing.UserId == AuthenticateHelper.CurrentAccountRole().Id ? "disabled" : "")
                                                    class="@(Model.Listing.UserId == AuthenticateHelper.CurrentAccountRole().Id ? "bg-gray-100" : "bg-sky-700")
                                                ml-2 border border-transparent rounded-md py-2 px-4 flex items-center justify-center text-sm font-medium
                                                text-white
                                                        @(Model.Listing.UserId == AuthenticateHelper.CurrentAccountRole().Id ? "hover:cursor-not-allowed" : "")
                                                @(Model.Listing.UserId == AuthenticateHelper.CurrentAccountRole().Id ? "bg-gray-100" : "hover:bg-sky-800")
                                                        focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50
                                                focus:ring-sky-800">
                                                @(Model.Listing.UserId == AuthenticateHelper.CurrentAccountRole().Id ? "Owend Item" : "Start Negotiation")
                                            </button>
                                        </div>


                                    </div>

                                </div>
                            </form>
                        </section>
                    </div>
                </div>


            </div>


        </div>
    </div>

</div>
}

</div>

@section CSS{
    <link rel="stylesheet" href="~/css/Loader.css"/>
    <link rel="stylesheet" href="~/css/mapbox-gl.css"/>
}

@section Scripts
{
    <script src="~/js/mapbox-gl.js"></script>
    <script>
        mapboxgl.accessToken = @Html.Raw(Json.Serialize(_Configuration.GetSection("MapBox")["SecretKey"]));
        var deliveryAddress = @Html.Raw(JsonConvert.SerializeObject(Model.Listing.DeliveryLocation));
        var map = new mapboxgl.Map({
            container: deliveryAddress.LocationId.toString(), // container ID
            style: 'mapbox://styles/mapbox/streets-v11', // style URL
            center: [deliveryAddress.Longitude, deliveryAddress.Latitude], // starting position [lng, lat]
            zoom: 12 // starting zoom
        });
        // Create a default Marker and add it to the map.
        var marker = new mapboxgl.Marker({ color: 'red', rotation: 0 })
            .setLngLat([deliveryAddress.Longitude, deliveryAddress.Latitude])
            .addTo(map);

    </script>
}